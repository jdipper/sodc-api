name: CI

on:
  push:
  pull_request:
  repository_dispatch:

jobs:
  docker-build-test-deploy:
    name: Docker build/test/deploy (Docker ${{ matrix.docker }})
    runs-on: ubuntu-latest
    container:
      image: jdipper/docker_test_env:latest
      env:
        DOCKER_CERT_PATH: /certs/client
        DOCKER_CLI_EXPERIMENTAL: enabled
        DOCKER_HOST: tcp://docker:2376
        DOCKER_TLS_VERIFY: '1'
      options: >-
        -v /tmp/docker/certs/client:/certs/client
    services:
      docker:
        image: docker:${{ matrix.docker }}-dind
        env:
          DOCKER_TLS_CERTDIR: /certs
        options: >-
          --privileged
          -v /home/runner/work:/__w
          -v /tmp/docker/certs:/certs
          --health-cmd "docker info"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      matrix:
        docker:
          - '19.03'
      fail-fast: false
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Docker image check
        run: |
          ls -al ~
      - name: Create builder instance
        run: |
          docker context create default_tls
          docker buildx create --driver docker-container --driver-opt image=moby/buildkit:master,network=host --use default_tls
      - name: Build images
        run: |
          echo ::set-output name=SOURCE_TAG::test
          docker buildx bake \
            --pull \
            --set admin.args.BUILDKIT_INLINE_CACHE=1 \
            --set admin.output=type=docker \
            --set api.args.BUILDKIT_INLINE_CACHE=1 \
            --set api.output=type=docker \
            --set client.args.BUILDKIT_INLINE_CACHE=1 \
            --set client.output=type=docker \
            --set php.args.BUILDKIT_INLINE_CACHE=1 \
            --set php.output=type=docker \
      - name: Validate composer.json
        run: |
          if jq -e '.extra.symfony.id != null' api/composer.json > /dev/null; then
            echo 'api/composer.json must not have extra.symfony.id' 1>&2
            exit 1
          fi
          docker-compose run --no-deps --entrypoint '' --rm -T php composer validate --no-check-publish
      - name: Start services
        run: docker-compose up -d
      - name: Wait for services
        run: |
          while status="$(docker inspect --format="{{if .Config.Healthcheck}}{{print .State.Health.Status}}{{end}}" "$(docker-compose ps -q php)")"; do
            case $status in
              starting) sleep 1;;
              healthy) exit 0;;
              unhealthy) exit 1;;
            esac
          done
          exit 1
      - name: Check security vulnerabilities
        run: |
          docker-compose exec -T php curl -fsSL -o /usr/local/bin/security-checker https://get.sensiolabs.org/security-checker.phar
          docker-compose exec -T php chmod +x /usr/local/bin/security-checker
          docker-compose exec -T php security-checker security:check
      - name: Check HTTP reachability
        run: | # we have to connect to the "docker" hostname because of Docker-in-Docker
          curl -fk -H 'Host: localhost' https://docker # Client
          curl -fk -H 'Host: localhost' https://docker:444 # Admin
          curl -fk -H 'Host: localhost' https://docker:8443 # API



  ct-lint:
    name: ct lint (ct ${{ matrix.ct }})
    runs-on: ubuntu-latest
    container:
      image: quay.io/helmpack/chart-testing:v${{ matrix.ct }}
    strategy:
      matrix:
        ct:
          - '2.4.0'
      fail-fast: false
    timeout-minutes: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Lint
        run: ct lint --all --chart-dirs api/helm/api
